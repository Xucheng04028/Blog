<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[唐小筑]]></title>
  <link href="https://blog.tangxiaozhu.com/atom.xml" rel="self"/>
  <link href="https://blog.tangxiaozhu.com/"/>
  <updated>2018-12-15T00:08:13+08:00</updated>
  <id>https://blog.tangxiaozhu.com/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.mweb.im/">MWeb</generator>
  
  <entry>
    <title type="html"><![CDATA[同步微博至 Twitter 的新方式（图文教程）]]></title>
    <link href="https://blog.tangxiaozhu.com/15447773011519.html"/>
    <updated>2018-12-14T16:48:21+08:00</updated>
    <id>https://blog.tangxiaozhu.com/15447773011519.html</id>
    <content type="html"><![CDATA[
<p><img src="media/15447773011519/2018-12-14-16.55.14.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-18.20.49.png" alt=""/></p>

<span id="more"></span><!-- more -->

<p><img src="media/15447773011519/2018-12-14-16.57.52.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-16.59.21.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-17.04.13.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-17.05.58.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-17.06.49.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-17.16.58.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-17.21.45.png" alt=""/></p>

<p>将此网址粘贴到记事本中，后面再次设置 IFTTT 时需要用到。</p>

<p>然后需要验证，在此网址后面添加 <code>?text=text&amp;image=imageUrl</code>，形成网址如下：</p>

<pre><code class="language-text">https://hook.integromat.com/sgv8piw5o1184s278dgi6fidyc7343tsff?text=text&amp;image=imageUrl
</code></pre>

<p>并在浏览器里直接访问这个网址，如果弹出新界面并提示 Accepted，说明以上步骤均正常，可以继续。</p>

<p><img src="media/15447773011519/2018-12-14-17.26.54.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-17.30.01.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-17.30.31.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-17.31.57.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-17.32.19.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-17.36.15.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-17.36.46.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-17.38.21.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-17.39.39.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-17.41.09.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-17.44.54.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-17.47.11.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-17.48.13.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-17.51.52.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-17.53.21.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-18.03.07.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-18.04.46.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-18.05.23.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-18.06.33.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-18.08.07.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-18.09.19.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-18.10.02.png" alt=""/></p>

<p><img src="media/15447773011519/2018-12-14-18.14.24.png" alt=""/></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[同步微博至 Twitter 的新方式]]></title>
    <link href="https://blog.tangxiaozhu.com/15447762122595.html"/>
    <updated>2018-12-14T16:30:12+08:00</updated>
    <id>https://blog.tangxiaozhu.com/15447762122595.html</id>
    <content type="html"><![CDATA[
<p>IFTTT 同步微博至 Twitter 的体验太糟糕，最大的缺陷是无法较好地处理文字和附图微博。本文将介绍一种进阶方法，利用 IFTTT 和 Integromat 同步，以解决只用 IFTTT 同步微博的缺陷。</p>

<p><img src="media/15447762122595/2018-06-14-21.50.48.png" alt=""/></p>

<h2 id="toc_0">IFTTT &amp; Integromat 同步微博和 Twitter</h2>

<p>由于微博 API 限制，IFTTT 同步微博到 Twitter 的体验奇差，无法恰当区分纯文字、带图片的微博和转发微博。而以 <a href="https://www.integromat.com/en/about">Integromat</a> 为纽带建立「微博 &amp; IFTTT &amp; Twitter」之间的联系，则可以解决这些问题。Integromat 可以区分文字微博、附图微博，并过滤转发微博，原理如下：</p>

<p><img src="media/15447762122595/212132018-1aa.png" alt=""/></p>

<blockquote>
<p>Integromat is the glue of the internet. Integromat is the most advanced online automation platform. We&#39;ve redefined work automation so everyone can get back to what matters the most.</p>
</blockquote>

<span id="more"></span><!-- more -->

<h3 id="toc_1">设置 IFTTT</h3>

<p>设置 IFTTT 的过程比较简单，而 <a href="https://www.producthunt.com/posts/integromat">Integromat</a> 的设置比较复杂。</p>

<p>### 创建两个 Applet 分别用于发布文字和附图微博</p>

<p><strong>文字微博</strong></p>

<ol>
<li>if this <code>Webhooks</code> --&gt; <code>Receive a web request</code> --&gt; <code>Event Name:</code>only_text_weibo --&gt; <code>Create trigger</code></li>
<li>then that <code>Twitter</code> --&gt; <code>Post a tweet</code> --&gt; <code>Tweet text: {{Value1}}</code></li>
<li>Creat action</li>
</ol>

<p><strong>附图微博</strong></p>

<ol>
<li>if this <code>Webhooks</code> --&gt; <code>Receive a web request</code> --&gt; <code>Event Name:</code>image_text_weibo --&gt; <code>Create trigger</code></li>
<li>then that <code>Twitter</code> --&gt; <code>Post a tweet with image</code> --&gt; <code>Tweet text: {{Value1}}</code> --&gt; <code>image URL: {{Value2}}</code></li>
<li>Creat action</li>
</ol>

<p><strong>Webhook Key</strong><br/>
搜索 <code>Webhook</code>，点击 <code>Documentation</code>，记住 Key，形如 mZrddwEydzxxxxxxJeEXE，后面要用到。</p>

<h3 id="toc_2">设置 Integromat</h3>

<p>接收 IFTTT 请求，过滤微博，触发文字微博和附图微博的 Webhooks 规则。用文字描述这个过程较为抽象，可查阅 <a href="https://xiaomingplus.com/note/weibo-filter-to-other-platform/">文字教程</a>，或者更为直观的 <a href="https://blog.tangxiaozhu.com/15447773011519.html">图文教程</a>，或者直接导入 <a href="https://gist.github.com/heytxz/ef223634d9177bf43f6cd2bcda4448bc">我的配置</a> 并加以修改：</p>

<ol>
<li>导入 <code>blueprint.json</code> 后的样子：<img src="media/15447762122595/2018-12-14-18.53.35.png" alt=""/></li>
<li>创建同名 Webhook（因为 Webhook 链接相同，故需要以新创建的方式变更链接）：<img src="media/15447762122595/2018-12-14-18.54.49.png" alt=""/></li>
<li>设置 Data structure：<img src="media/15447762122595/2018-12-14-19.03.05.png" alt=""/></li>
<li>变更 <code>HTTP 8</code> 链接红圈部分（即设置 IFTTT 时的 Key）：<img src="media/15447762122595/2018-12-14-19.00.17.png" alt=""/></li>
<li>变更 <code>HTTP 9</code> 链接红圈部分（即设置 IFTTT 时的 Key）：<img src="media/15447762122595/2018-12-14-19.01.39.png" alt=""/></li>
<li>保存并启用。</li>
</ol>

<h3 id="toc_3">回到 IFTTT 再次设置</h3>

<p>创建同步微博内容到 Integromat 的 Webhook 触发器：</p>

<ol>
<li>if this：<code>Weibo</code>，选择 <code>New post by you</code>；</li>
<li>then that：<code>Webhook</code>，选择 <code>Make a web request</code>，URL 填写设置 Integromat 里面拿到的地址：<code>https://hook.integromat.com/xxxxxxxxxxxxxxxx</code>，Method 选择 <code>POST</code>，Content Type 选择 <code>application/x-www-form-urlencode</code>，Body 填写 <code>text={{Text}}&amp;image={{PhotoURL}}</code>；</li>
<li>点击 Create Action，点击 Finish ……</li>
</ol>

<h3 id="toc_4">同步微博的一些限制</h3>

<ul>
<li><code>&amp;</code> 字符及其之后的文字内容无法同步；</li>
<li>文字数超过 Twitter 限制（140）无法同步；</li>
<li>受限于微博 API 只能同步一张照片。</li>
</ul>

<p>备注：IFTTT &amp; Integromat 同步微博至 Twitter 的方法来自 <a href="https://xiaomingplus.com/note/weibo-filter-to-other-platform/">xiaomingplus</a>，万分感谢允许加工。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周分享第 5 期]]></title>
    <link href="https://blog.tangxiaozhu.com/15439954845114.html"/>
    <updated>2018-12-05T15:38:04+08:00</updated>
    <id>https://blog.tangxiaozhu.com/15439954845114.html</id>
    <content type="html"><![CDATA[
<ul>
<li>
<a href="#toc_0">疑问</a>
<ul>
<li>
<a href="#toc_1">电影资源的命名含义？</a>
</li>
</ul>
</li>
</ul>


<h2 id="toc_0">疑问</h2>

<h3 id="toc_1">电影资源的命名含义？</h3>

<pre><code class="language-text">她不知道名字的那些鸟儿.2017.BD1080P.X264.AAC.Japanese.CHS.MF
</code></pre>

<p>[中文名称]：她不知道名字的那些鸟儿<br/>
[年份]：2018<br/>
[分辨率]：BD1080P<br/>
[视频压缩编码格式]：X264<br/>
[音频格式]：AAC<br/>
[国家]：Japanese<br/>
[字幕]：CHS（简体中文）<br/>
[MF]：指什么</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自学 Python 第 2 期]]></title>
    <link href="https://blog.tangxiaozhu.com/15428737284655.html"/>
    <updated>2018-11-22T16:02:08+08:00</updated>
    <id>https://blog.tangxiaozhu.com/15428737284655.html</id>
    <content type="html"><![CDATA[
<p><a href="15251484115051.html">自学 Python 第 1 期</a> 中以 pyenv 安装和管理 Python 版本，并且全局启用了 Python 3.6.5 版本，正式敲代码的时间到来，编辑器选择 Visual Studio Code，简称 VS Code，由微软出品，虽然我英语基础还凑合，但巨头出品且支持中文的编辑器无疑最便捷。</p>

<span id="more"></span><!-- more -->

<p>VS Code 功能强大，插件众多，完全熟悉需要一些时间，先大概了解下自己的编辑器，让代码编写有个更好的开始，<a href="https://jeasonstudio.gitbooks.io/vscode-cn-doc/content/">VS Code 官方文档中文版</a></p>

<blockquote>
<p>默认情况下，VS Code 文件管理器中包括所有文件夹（如 .git），我们可以通过 <code>files.exclude setting</code> 文件配置不显示文件和文件夹的规则。</p>

<p>你可以使用快捷键 <code>⇧⌘\</code> 直接跳转到匹配的括号处。</p>

<p>VS Code 支持动态多光标。你可以使用 Alt+Click 的方式添加第二光标（被渲染为较细的光标）。每个光标课根据其所在位置的上下文独立操作。最常用的多光标添加方式是使用快捷键 <code>⌥⌘↓</code> 或 <code>⌥⌘↑</code> 向上或下插入光标。<br/>
⌘D 选择光标处的词，或下一个选中词出现的位置。⌘K ⌘D将添加一个光标到下一个选中词所出现的位置。</p>
</blockquote>

<p><img src="media/15428737284655/multicursor-2.gif" alt="multicursor-2"/></p>

<p><img src="media/15428737284655/multicursor-word.gif" alt="multicursor-word"/></p>

<blockquote>
<p>按住 Shift 或 Alt 时，用鼠标拖动可以按列选择文本。</p>
</blockquote>

<p>最后，根据 <a href="https://jeasonstudio.gitbooks.io/vscode-cn-doc/content/md/%E8%AF%AD%E8%A8%80/python.html">文档</a> 安装 Python 扩展。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我的时间管理道与术]]></title>
    <link href="https://blog.tangxiaozhu.com/15401048488526.html"/>
    <updated>2018-10-21T14:54:08+08:00</updated>
    <id>https://blog.tangxiaozhu.com/15401048488526.html</id>
    <content type="html"><![CDATA[
<p>没有人可以未卜先知，事事间的「因」与「果」往往只有在回首时才能呈现。</p>

<p>无论是谁，没有人可以摆脱现状，每一时刻的现状都是某一或某些时刻的结果，同时也是未来某一或某些时刻的原因。</p>

<p>没有人能逃脱现实的束缚，几乎一切愚蠢的行为都来自否定现实，逃避现实。只有坦然接受。才能脚踏实地，避免心浮气躁、好高骛远。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[重生之完美未来]]></title>
    <link href="https://blog.tangxiaozhu.com/15400919269253.html"/>
    <updated>2018-10-21T11:18:46+08:00</updated>
    <id>https://blog.tangxiaozhu.com/15400919269253.html</id>
    <content type="html"><![CDATA[
<p>赵浮生：任何人都可以变得狠毒，只要你尝试过什么叫嫉妒。而有一些人永远都不会嫉妒，因为他太骄傲。</p>

<p>这世界上最难沟通的人，是那些读了一点书，满脑子都是标准答案的人，他们的标准答案，大多数从教科书、广播、影视、报刊、官网上而来，贯穿了从幼年乃至中老年的全过程，所以，人最可怕的不是没有思想，二是满脑子装满了似是而非的答案。</p>

<p>高质量的生活不在于多，而在于精简。有些东西该丢的丢，该放弃的放弃。当然，有四样东西不管何时都必须要有：扬在脸上的自信，长在心里的善良，融进血液的骨气，刻在生命里的坚强。它们像是人生路上的护身符，也许在平静的日子里看不出什么，却总会在不经意间，带来好运。</p>

<p>曾国藩：古今庸人之败在于惰，古今人才之败在于傲。</p>

<p>怒气这种东西，一旦爆发出来，总会有一种无尽的空虚感。</p>

<p>都说人生当中注定会遇到两种人，一种惊艳了时光，一种温柔了岁月。</p>

<p>荷尔蒙决定一见钟情，多巴胺决定天长地久，肾上腺决定出不出手，自尊心决定谁先开口，最后寿命和现实决定谁先离开谁先走。</p>

<p>赵浮生：你已经长得足够美了。那就不要想得太美了。</p>

<p>努力就有收获，相爱就会在一起，这是世界上最大的两个谎言，却一直支撑着我们年少时的跌跌撞撞。</p>

<p>赵浮生：成熟，就是要遵循一定的规则去做事，而不是凭着自己心里的那点喜好。</p>

<p>当一个的精神生活水平超过他的物质生活水平，他就不可避免地开始矫情。而当一个人的物质生活水平超过了他的精神生活水平之后，他就不可避免地开始装逼。</p>

<p>有些人总是说自己的朋友来自五湖四海，所以当他真的有困难的时候，这些朋友都回去了。</p>

<p>很多人在恋爱和婚姻的过程当中，都存在着一个巨大的误区，他们觉得只要把岳父岳母两位长辈哄高兴了，就万事大吉了。但事实上，这是一个错误的认知。虽热父母对于女儿的影响力很大，甚至可以决定儿女究竟嫁不嫁，但更重要的是，女生身边的同龄人亲属，往往也能影响女生的决定。</p>

<p>天大的事情，只有人在乎才算问题，如果没人在乎，天塌了也就塌了。</p>

<p>马克吐温：有时候现实往往比小说更荒诞，因为虚构是在一定逻辑下进行的，而现实往往毫无逻辑可言。</p>

<p>人是分三六九等的，甭管大家嘴里如何喊着人人平等，但是在看待别人的时候，心里面肯定会不自觉的把人分为不同档次的存在。这就好像某些女人整天喊着男女平等，然后还要求男人必须要宠着女人，否则就是斤斤计较，不成熟不大气。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周分享第 4 期]]></title>
    <link href="https://blog.tangxiaozhu.com/15302755461743.html"/>
    <updated>2018-06-29T20:32:26+08:00</updated>
    <id>https://blog.tangxiaozhu.com/15302755461743.html</id>
    <content type="html"><![CDATA[
<ul>
<li>
<a href="#toc_0">案例</a>
<ul>
<li>
<a href="#toc_1">Visual Studio Code Error</a>
</li>
</ul>
</li>
</ul>


<h2 id="toc_0">案例</h2>

<h3 id="toc_1">Visual Studio Code Error</h3>

<p>如何解决 Visual Studio Code Error: <code>Linter pylint is not installed</code>（数据库引擎 Python 代码分析插件没有安装）？</p>

<p>如果不需要可以关掉，在用户设置里输入 <code>python.linting.pylintEnabled&quot;: false</code> 即可。</p>

<p>或以此命令 <code>sudo -H pip install pylint</code> 安装…… </p>

<p>⚠️ 点击 install 安装失败的根源在于 pip 安装似乎无法依靠 socks 代理，只要将终端代理改为 https 的方式，一切都正常了！这也是本问题解决的最佳方式。<a href="https://blog.kelu.org/tech/2017/08/06/python-socks-support.html">方法来源</a></p>

<p><strong>无效方法</strong><br/>
如果使用 python3，则在用户设置中覆盖 <code>“python.pythonPath”: “python3”</code>然后点击弹框的 install，VS Code 会安装好 pylint 等一系列东西：安装还是失败。<a href="https://blog.csdn.net/superzmy/article/details/80455070">方法来源</a></p>

<hr/>

<p><strong>macOS sudo 参数</strong><br/>
<code>-b</code>：在后台执行指令。<br/>
<code>-h</code>：显示帮助。<br/>
<code>-H</code>：将 HOME 环境变量设为新身份的 HOME 环境变量。<br/>
<code>-k</code>：结束密码的有效期限，也就是下次再执行 sudo 时便需要输入密码。<br/>
<code>-l</code>：列出目前用户可执行与无法执行的指令。<br/>
<code>-p</code>：改变询问密码的提示符号。<br/>
<code>-s</code>：执行指定的 shell。<br/>
<code>-v</code>：延长密码有效期限 5 分钟。<br/>
<code>-V</code>：显示版本信息。<br/>
<code>-S</code>：从标准输入流替代终端来获取密码<br/>
<code>-u &lt;用户&gt;</code>：以指定的用户作为新的身份。若不加上此参数，则预设以 root 作为新的身份。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[大版本更新，这次 MWeb 3.0 又带来了什么]]></title>
    <link href="https://blog.tangxiaozhu.com/15301955259101.html"/>
    <updated>2018-06-28T22:18:45+08:00</updated>
    <id>https://blog.tangxiaozhu.com/15301955259101.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>少数派精选并推荐至首页：<a href="https://sspai.com/post/45521">点此查看</a><br/>
责编文刀漢三对本文少数派版本做了大量修改，本文著作权归作者唐小筑所有，并授权少数派独家使用，未经少数派许可，不得转载使用。</p>
</blockquote>

<p><a href="https://zh.mweb.im/index.html">MWeb</a> 作为 macOS 上体验优秀的 Markdown 应用，在管理知识、写作、发布上持续发力，现在它更新了 3.0 大版本，本篇文章就带你领略其风采。</p>

<blockquote>
<p>开发者说：MWeb 名称为 Markdown --&gt; Web ，最初的想法是简单快捷地把 Markdown 写的文档发布到 Web 上。现在也一直在写作和发布到 Web 上优化。解决的是管理知识、写作、发布的问题。然后 MWeb 采用的是 Github Flavored Markdown 语法，一直是如此。</p>
</blockquote>

<p>在 macOS 平台 Markdown 编辑器同质化严重的今天，MWeb 以其出色的功能和体验独树一帜。2014 年 1.0 版本发布至今，MWeb 付费用户始终可以免费更新，3.0 大版本是首次付费更新。因为开发者 <a href="http://coderforart.com/about.html">Otis</a> 认为软件没超过 3 年以上，都没有另起的理由。</p>

<ul>
<li>你是否需要一款体验优秀且跨 macOS 和 iOS 的双平台 Markdown 编辑器？</li>
<li>是否需要数分钟内生成和发布静态博客，并用 GitHub 等平台托管图片资源？</li>
<li>是否需要直接发布文 WordPress、Medium、新浪博客等平台？</li>
<li>是否需要以标签和分类管理 Markdown 文档？</li>
<li>是否需要搭建个人 Wiki 知识库和支持全局检索？</li>
</ul>

<p>那么 MWeb 3.0 将是你的不二选择，作为一款专业的 Markdown 写作、记笔记、静态博客生成软件，此次更新表面来看仅增加了数个功能和细节改善，似乎不堪称为大版本更新，但看不见的背后是大量代码的重构，如 iOS 11 升级至 iOS 12 一般。</p>

<span id="more"></span><!-- more -->

<h2 id="toc_0">新功能</h2>

<p>这部分主要谈谈新功能带来的体验提升，但坦白来说，MWeb 3.0 最重要的更新仅两个功能：快速笔记和快速搜索，其他主要是一些细微的改进。黑暗模式、沉浸模式、外部文档库模式、标签过滤、发布和导出服务等均为 2.0 就具备的功能。考虑到开发者秉持软件应该至少免费更新 3 年以上的理念，预期会带来越来越好的改进，因此值得升级。</p>

<p><strong>快速笔记</strong><br/>
快速笔记，蛮好用的新功能，启用后，点击菜单栏 MWeb 即可输入。可以选择每隔一天、三天、七天、十四天新建一个文档，在这个间隔时间内输入的内容，会保存在同一篇文档内，点右下角对勾就会将时间戳和内容保存至文档。</p>

<p><img src="media/15301955259101/MWeb%205.png" alt="MWeb 5"/></p>

<p>不仅于此，快速笔记功能亦可用于文字、图片素材收集，比如浏览网页时喜欢一段话或图片，就可以选中然后拖拽到菜单栏图标以完成收集。如果要呼出 MWeb 编辑器界面以浏览收集内容，点击左下角图标即可。</p>

<p><strong>快速搜索</strong><br/>
或称之为全局搜索，快捷键为 <code>command ⌘ + 字母 O</code>，用以搜索整个文档库，在沉浸模式下（仅显示编辑器界面且隐藏工具栏和标签栏）可借助快速搜索切换已打开的文档，打开最近使用的文档或其他文档。</p>

<p><img src="media/15301955259101/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-07-02%2022.36.55.png" alt="屏幕快照 2018-07-02 22.36.55" class="mw_img_center" style="width:400px;display: block; clear:both; margin: 0 auto;"/><br/>
<strong>固定标签页</strong><br/>
在 MWeb 2.0 时代，每点选其他文档就会出现新标签页，以至出现大量标签页造成管理混乱。在 MWeb 3.0 中切换其他文档时，旧文档标签页会被替换，双击标签页则会将其固定从而不被替换。</p>

<h2 id="toc_1">使用场景</h2>

<p>这部分主要讲解我日常使用 MWeb 的场景，或许这也是你的需求之一。</p>

<p><strong>构建和发布静态博客</strong> <br/>
MWeb 自带数种网站主题，如果要托管到 Github 或 Coding，在已配置好 git 的条件下，一分钟内即可生成和发布静态博客，文章图片资源也会托管在 GitHub 等平台，无需使用七牛等作为图床。如果需要，MWeb 也支持 Google Photos、imgur、七牛、又拍云和自定义图床。</p>

<p><img src="media/15301955259101/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-06-28%2022.43.03.png" alt="屏幕快照 2018-06-28 22.43.03" class="mw_img_center" style="width:400px;display: block; clear:both; margin: 0 auto;"/><br/>
<strong>文章多平台发布</strong><br/>
MWeb 拥有极其强大的发布功能，支持发布到 WordPress、Medium、Tumblr、Metaweblog API（新浪博客等）、印象笔记、为知笔记等平台，除了 Medium 外，其它平台都支持文章更新。</p>

<p>如果要分享到微信等手机应用中，导出或复制为图片功能可以生成适配手机屏幕的文章图片，也可以导出为 PDF、Epub、Docx 等格式。</p>

<p><img src="media/15301955259101/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-07-03%2018.53.40.png" alt="屏幕快照 2018-07-03 18.53.40" class="mw_img_center" style="width:353px;display: block; clear:both; margin: 0 auto;"/><br/>
<strong>出色的大量文档管理能力</strong><br/>
MWeb 可以根据分类和标签管理文档，也有全局搜索功能，俨然另一个印象笔记，相当于 Bear、Typora 的结合体，这在 Markdown 编辑中是极少见的。如果嫌弃印象笔记笨拙或缺乏对 Markdown 的支持，又难以离开其高级搜索功能，那么编辑工作可依赖 MWeb，然后通过发布服务将文章发送到印象笔记。</p>

<p>借助 MWeb 出色的大量文档管理能力，我们可以构建个人 Wiki 知识库。全局搜索和标签过滤使知识库的查询和管理更加便捷，也可以复制文档引用连接串联不同的文档，不足是无法直接拖移文档到另一文档内来生成文档引用链接。但可以这样讲，MWeb 3.0 是现阶段最好的个人 Wiki 编辑器，Bear 曾是我的选择之一，但它不像 MWeb、印象笔记一样可以同时用标签和层级结构管理文档，而是由标签自动生成层级结构；MarkEditor 也曾是我的选择之一，它可以拖移文档到另一文档内来生成文档引用链接，但不支持全局搜索和标签。因此，如果你也想构建个人 Wiki，不妨试一试 MWeb。</p>

<h2 id="toc_2">更多的期望</h2>

<p>MWeb 3.0 的目录和工具栏图标均有美化，一些细节地方仍需改进，比如偏好设置界面的设计就有些杂乱，对于我这样挑剔的人来说，期待更富条理感和细节美的改进。其次，期待编辑体验进一步提升，比如 MarkEditor 2.0 左 Shift 按下时使用英文符号、右 Shift 按下时使用中文符号这样的特殊优化，比如文档 git 式历史版本功能等。最后，期待 MWeb 开发更多功能并保持外在的简约，此次 MWeb 3.0 的新功能差强人意。</p>

<p><a href="http://zh.mweb.im/mweb3-release-note.html">官网</a> 声明 MWeb 3.0 将于下周发布，首发限时半价，60 元，非 Mac App Store 购买的用户如果是在 2018 年 5 月 1 号之后购买了 MWeb 2.x，可邮件联系开发者更换为 3.0 版。MWeb 3.0 的后续更新会有更多的可能，一次买断，且预计持续更新 3 年以上，如有兴趣，不妨和我一样趁着下周首发半价入手……</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[当被 diss 之后]]></title>
    <link href="https://blog.tangxiaozhu.com/15274094359218.html"/>
    <updated>2018-05-27T16:23:55+08:00</updated>
    <id>https://blog.tangxiaozhu.com/15274094359218.html</id>
    <content type="html"><![CDATA[
<p>假设有人在我的文章下面出口成脏，我的心情丝毫不会波动……</p>

<p>但当这个人言语富有条理、文字结构合理，我就难免受到影响了。少数派，在我眼里是偏向于 App 及其使用技巧分享的平台，当少数派开始转型数字生活，最初还是不太适应，因为认识少数派是从优秀的 App 开始，所以我甚至大概评论过为什么这样的文章也能上首页。分享 App 这条路确实走不远，比如我写过关于 PDF 应用的文章，就基本再无可写了。少数派，需要更多的读者，需要多样化需求的读者出现，尤其是主推付费教程以后。</p>

<p>在被 diss 之后，额，倒是对自己没啥负面影响，但我在认真考虑数字转型。2011 年我刚大一，相当长的一段时期，我主要写自己的一些思考，比如男女平等方面，也得到了一些肯定，虽然稿子都丢失了。上一篇关于效率的思考也提到，我发觉自己并没有建立一套运行有效的效率方式，多年来尝试过各种 App 只是打开了视野。</p>

<p>再者，我的圈子比较小，基本只有我对 App 这个事物发自内心的喜爱，周边人大都也不知道我在少数派和博客写文章，唯有数个好友，但兴趣也不重叠。</p>

<p>App 这条路，对少数派而言是走不远的；对自己而言，也许也如此。之后，我会更加细致地观察生活，充分利用各类设备辅助生活，也认真审视应用和服务，尽力融合出自己的高效生态，稳步提升，也让生活更轻松和美好。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于效率的思考]]></title>
    <link href="https://blog.tangxiaozhu.com/15273912309333.html"/>
    <updated>2018-05-27T11:20:30+08:00</updated>
    <id>https://blog.tangxiaozhu.com/15273912309333.html</id>
    <content type="html"><![CDATA[
<p>工作以后，我发觉自己并没有建立一套运行有效的效率方式，挺让我沮丧。在 2014 年完全完全进入 Apple 生态以后，学生时代富余的时间，让我尝试了无数 App，相信折腾是最大的乐趣。Apple 生态和无与伦比的视觉效果，促使我更愿意去折腾，但现在毕竟工作了，也要到了成家立业的时候……</p>

<p>这并不是说，迫于生存压力应该做点什么，我似乎并没有感受到太多生存威胁。我只是沮丧于，我偶尔沾沾自喜的闭环效率方式，却不能促使自己越过一个又一个高峰。为达审美，苛求于生活用品，苛求于 App 颜值，苛求于行文排版…… 可是，同时为什么不能自然地苛求于核心能力的提升？</p>

<p>折腾是快乐的，认识了不少朋友，但似乎有些沉溺于折腾，忘记了初心。不知不觉，我竟然又开始无意识地刷各类新闻，我感到，又到了人生迷茫的阶段。一直以来，我都胸无大志，所谓名校、研究生也没动摇我甘愿人生从来平凡的念头，但我好怕平凡沦为平庸，还不自知。</p>

<p>仔细审视初心，左右徘徊的念头还是希望能给世界多献上一点光芒。呵，多么空虚的念头。给世界多献上一点光芒，首先要自己慢慢成为光芒。可我不止一次沮丧地发现，我多么无能为力。四小时睡眠法、GTD 等等尝试过后，却更显疲惫和无力。</p>

<p>认真做事的男人最吸引人…… 相当长的时间里，我以为要先找到好方法，再高效地认真做事，然而找了无数好方法，却没有认真做完一件想想就很棒很好的事情。还发了微博感慨：</p>

<blockquote>
<p>GTD 应该是为了解决事务繁多的需求，像我这样事务不多的人去研究 OmniFocus 等应用无异于偏离了中心，一般的提醒事项应用就足以应对了，主要精力应该聚焦于提升核心竞争力。 ​​​​</p>
</blockquote>

<p>核心竞争力，核心能力，有人讲做好善良的人要比做坏人更得有智慧，我也想说，愿意献给世界更好事物的人也更得有能力。从前，为了所谓修炼、闭关，我主动远离微博、朋友圈等，也拒绝一些聚会。现在感到，如果在认真做事，哪还需要克制这些欲望，因为全部心思都扑在热爱的事业上啊。在我提升最多的时候，往往是我没想主动提升的时候，忘我做事不知不觉就达到了更好。</p>

<p>学生时代，探寻了太多效率方式，也匆匆践行过许多。该是缓慢践行的时候了，快 25 周岁了，到生日时再审视下内心……</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周分享第 3 期]]></title>
    <link href="https://blog.tangxiaozhu.com/15268576442917.html"/>
    <updated>2018-05-21T07:07:24+08:00</updated>
    <id>https://blog.tangxiaozhu.com/15268576442917.html</id>
    <content type="html"><![CDATA[
<ul>
<li>
<a href="#toc_0">新闻</a>
<ul>
<li>
<a href="#toc_1">Google 删除不作恶口号</a>
</li>
</ul>
</li>
<li>
<a href="#toc_2">疑问</a>
<ul>
<li>
<a href="#toc_3">怎样确定作息时间</a>
</li>
<li>
<a href="#toc_4">中英文排版难点</a>
</li>
</ul>
</li>
<li>
<a href="#toc_5">图片</a>
</li>
</ul>


<h2 id="toc_0">新闻</h2>

<h3 id="toc_1">Google 删除不作恶口号</h3>

<p>2000 年以来，口号 <code>Don’t be evil</code> 一直是 Google 行为准则之一，2015 年 Google 重组成立 Alphabet 母公司时，该口号被修改为 <code>Do the right thing</code>，但前者依旧是行为准则之一。但在四月底或五月初 Google 已经悄悄删除该口号，不过仍然保留了这句话：</p>

<blockquote>
<p>And remember... don’t be evil, and if you see something that you think isn’t right - speak up!</p>
</blockquote>

<h2 id="toc_2">疑问</h2>

<h3 id="toc_3">怎样确定作息时间</h3>

<p><a href="https://tech.sina.com.cn/i/2016-09-30/doc-ifxwkzyk0743575.shtml">陆奇离职微软背后：伤势真的无法工作了</a> 一文中表示：从雅虎到百度，陆奇一直保持凌晨 4 点起床，5-6 点赶到办公室工作的生活习惯，平均每天工作超过 15 个小时。在美国，与陆奇同样清晨早起工作，一天工作时间超过 12 个小时的企业高管不乏其人。苹果 CEO 库克每天 4:30 起床，Twitter CEO 杰克·多西每天 5 点起床，通用电气 CEO 伊梅尔特每天 5:30 起床，乔布斯每天 6 点起床，巴菲特每天 6:30 起床。</p>

<p>可是，并没有检索到文章表明这些人何时睡眠。我想，对自己来讲，22 点到 23 点之间睡觉，6:30 左右起床比较好。</p>

<h3 id="toc_4">中英文排版难点</h3>

<p>Word 有自动调整中西文字体间隔的功能，但并不会调整符号（如 %）与中文字体的间隔。那么「50%后面接中文」时需要加空格么，似乎「50% 后面接中文」时加空格更好看一些。所以 Word 中这种位置手动添加空格么？</p>

<h2 id="toc_5">图片</h2>

<ul>
<li>英文字母进化时间轴</li>
</ul>

<p><img src="media/15268576442917/TTKjNm08l.jpeg" alt="Evolution of the English Alphabet"/></p>

<ul>
<li>改变世界的 17 个数学公式</li>
</ul>

<p><img src="media/15268576442917/15273001818444.png" alt=""/></p>

<p>了解自 <a href="https://www.ruanyifeng.com/blog/2018/05/weekly-issue-6.html">阮一峰</a>，转载自 <a href="https://www.ruanyifeng.com/blog/2018/05/weekly-issue-6.html">Business Insider</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[臻至更高的高峰：MarkEditor 2.0 再进化!]]></title>
    <link href="https://blog.tangxiaozhu.com/15272430033851.html"/>
    <updated>2018-05-25T18:10:03+08:00</updated>
    <id>https://blog.tangxiaozhu.com/15272430033851.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>少数派精选并推荐至首页：<a href="https://sspai.com/post/44681">点此查看</a><br/>
本文著作权归作者唐小筑所有，并授权少数派独家使用，未经少数派许可，不得转载使用。</p>
</blockquote>

<p>纯粹式 Markdown 编辑器有很多，其中 Typora 是所见所得编辑器的优秀代表；令人耳目一新的多功能编辑器也不少，比如 Bear、MWeb 等，各有各的特色，而 MarkEditor 2.0 是一款很贴近 Markdown 文字编辑者且让人情不自禁喜爱的工具，它已经不仅仅是多功能 Markdown 编辑器，甚至可看作一切文字工作的处理中心。</p>

<p><img src="media/15272430033851/15272431225162.jpg" alt="" class="mw_img_center" style="width:650px;display: block; clear:both; margin: 0 auto;"/></p>

<span id="more"></span><!-- more -->

<h2 id="toc_0">基于本地目录的数据结构</h2>

<p>MarkEditor 2.0 并没有数据库，一切都只以本地目录的数据结构存储。这点与 Bear、MWeb 等不同，譬如 MWeb 为了实现博客功能设置内部文档库模式，而 MarkEditor 仅基于本地目录的数据结构来实现一切功能，这为跨平台提供了最大的便利。不可否认，舍弃构建特别的数据库使 ME 失去一些可能，但将数据完全交给用户的设计也带来了数据便于管理、整理、同步的优势，这种设计从 FarBox Editor 到 MarkEditor 1.x 再到 2.0 一直如此，而且 MarkEditor 2.0 的想象空间不逊色于任何类似工具。</p>

<h2 id="toc_1">文字处理效率从此非同凡响</h2>

<p>Markdown 语法在 MarkEditor 中有特别的优化，比如样式修饰语法（居中、色彩、字体大小等），在当前行或段的末尾添加 <code>[center red @blue]</code> 则当前行或段会居中、字体变红色、背景变蓝色，ME 也支持 <code>[TOC]</code>、<code>[PAGE]</code> 等语法，具体参见帮助文档。</p>

<p>MarkEditor 2.0 支持多标签，且支持 <code>Command + 数字</code> 切换标签页，这是许多编辑器缺失的功能。此外，亦有延续自 MarkEditor 1.x 的「工作目录」功能，双击 <code>Alt</code> 可打开「我的工作目录」，在此添加常用文件夹，即可快速抵达，也可将快捷键设为 <code>Command</code> 或 <code>Control</code>。</p>

<p>延续自 MarkEditor 1.x  的强化版「Markdown 标记使用英文符号」功能，使 MD 编辑工作难以想象的轻松，<code>左 Shift</code> 按下时使用「英文」符号，<code>右 Shift</code> 按下时使用「中文」符号。或反之，皆可自定义。</p>

<p>而独特的「中英文之间自动空格」功能，使我的空格键得到了不少喘息的机会。<a href="https://github.com/mzlogin/chinese-copywriting-guidelines#-ms-text-autospace-to-the-rescue">中文文案排版指北</a> 和 <a href="https://sspai.com/post/37815">少数派写作排版指南</a> 让我养成了随手加空格的习惯，但事实上我认为这并非多好的习惯，中文排版理应是自动渲染的过程，譬如 Word 得益于 <code>-ms-text-autospace</code> 可以自动调整中英文间隔，但这种方式并未普及。而 MarkEditor 2.0 不仅支持中英文之间，事实上也支持「中文数字之间」自动空格。</p>

<p>为了更有效地追溯过去版本，MarkEditor 2.0 支持 Git 式「历史版本」系统，并且没有对最大历史版本设限，达到每一次书写皆有记录。</p>

<p><img src="media/15272430033851/15272431736667.png" alt="" class="mw_img_center" style="width:650px;display: block; clear:both; margin: 0 auto;"/></p>

<p>MarkEditor 2.0 也有其他别具一格的功能：</p>

<ul>
<li>选中文字导出为图片。简单图文、微信题图、代码高亮、配色方案、带壳截图，五大选项让你导出花式图片，满足花样需求，譬如文中带壳图片均由此功能导出；；</li>
<li>文档链接。从目录拖入其他文档，即可在本文档中创建可跳转的文档链接；</li>
<li>词性标注功能。可标注出文中英文或中文名词、动词、形容词等，也许有助于文章的修饰；</li>
<li>居中保持模式。使「正在编辑的位置」位于中央区域，快捷键为 <code>Shfit + Command + M</code>；</li>
<li>将链接或内容以二维码的形式插入；</li>
<li>首行缩进，让中文在 Markdown 中出彩；</li>
<li>等等。</li>
</ul>

<h2 id="toc_2">图片处理从未如此赏心悦目</h2>

<p>MarkEditor 2.0 支持将文档资源上传到 Bitcron、AWS S3、七牛，图片可一键上传至图床。此外，ME 2.0 也许是唯一具备「图片可视化管理」功能的 Markdown 编辑器，借助于「图片管理器」能够：</p>

<ol>
<li>快速收集图片资源，并随时在文章中插图，或上传到图床后插图；</li>
<li>纵览当前目录下所有图片，亦可进行复用或删除操作。</li>
</ol>

<p><img src="media/15272430033851/15272432144827.jpg" alt="" class="mw_img_center" style="width:600px;display: block; clear:both; margin: 0 auto;"/></p>

<p>此外，在文档内双击图片即弹出可视化窗口以调整图片大小。</p>

<p><img src="media/15272430033851/15272432286915.png" alt="" class="mw_img_center" style="width:650px;display: block; clear:both; margin: 0 auto;"/></p>

<p>值得一提的是，MarkEditor 2.0 支持从 Unsplash 搜索和插入图片，Bitcron（ME 自家博客站、网站引擎）文章封面图轻松搞定，也可作为 Zoommy 轻量替代品，满足轻量的图片需求。甚至，在同一局域网下，也可扫描二维码直接从手机端上传图片。</p>

<p><img src="media/15272430033851/15272432380941.png" alt="" class="mw_img_center" style="width:650px;display: block; clear:both; margin: 0 auto;"/></p>

<h2 id="toc_3">分享和导出从此大有不同</h2>

<p>在同一局域网下，启动「预览于 Web 浏览器」功能，扫描二维码或输入网址即可观测文章在不同设备下的最终效果，确保分享出去的文章能达到良好的阅读效果。</p>

<p>可将文章上传至云端，复制其七牛、AWS S3 公开 Url 或 MarkEditor Url，并以链接的形式分享。也可以「图片的形式」分享，常规或适应移动端表示导出适应大屏和手机的「最终效果」图片，常规（text）或适应移动端（text）表示导出适应大屏和手机的文章「Markdown 结构」图片，而「通过二维码发送到微信」分享图片才是最酷的方式。</p>

<p>对微信公众号运营者而言，或许最热爱「复制为微信公众号格式」功能，其公众号主题样式众多，颜值颇高，且支持 Markdown 表格、由表格自动转化的折线图等图表、流程图、代码高亮、图片等，但由于公众号自身限制，外部链接、数学公式等无法较好支持。同时，搭配「选中文字导出图片 -&gt; 微信题图」功能，一站式搞定公众号文章。</p>

<p><img src="media/15272430033851/15272432677603.png" alt="" class="mw_img_center" style="width:650px;display: block; clear:both; margin: 0 auto;"/></p>

<p>亦可以「Wiki 站点」的方式分享全目录内容，或将指定目录导出为「PDF 电子书」阅读和分享，其颜值均处于较高的水准。</p>

<p>MarkEditor 2.0 功能远不止于此，简洁界面的背后是强大的引擎，始于 FarBox Editor，进化自 MarkEditor 1.x，MarkEditor 2.0 臻至更高的高峰，更有 Bitcron 作为坚强的后盾…… 更多有关 ME 2.0 内容见 <a href="https://www.markeditor.com">社区问答</a> ，而 <a href="http://7xkyp2.media1.z0.glb.clouddn.com/MarkEditor2.0.mp4">视频简介</a> 也以更好的方式传达了 ME 理念和别致的特性。</p>

<p><img src="media/15272430033851/15272432850620.png" alt=""/></p>

<p>我想起了和开发者海波反馈问题或求助的邮件们，承载着我对 ME 的热爱和海波的热情，不知何故，想起海波就想起了定风波，想以此诗致海波：</p>

<blockquote>
<p>莫听穿林打叶声，何妨吟啸且徐行。<br/>
竹杖芒鞋轻胜马，谁怕？一蓑烟雨任平生。<br/>
料峭春风吹酒醒，微冷，山头斜照却相迎。<br/>
回首向来萧瑟处，归去，也无风雨也无晴。</p>
</blockquote>

<hr/>

<p>题外话：这篇文章是我成为少数派签约作者后的第一篇文章，实际上 ME 2.0 还处于活跃的更迭状态，我本想晚些时候再写，但 Oscar Liu 在 Slack 中询问意向，而 ME 2.0 也没啥影响日常使用的 Bugs，所以就写了。对了，ME 2.0 是收费应用，文中没提及，因在我看来收费是默认的，免费再去提及感觉更好一些。</p>

<p>我一向希望把自己知道的最好的东西传递出去，比如 ME 2.0 这个在同类产品中很有特性、也很好用的编辑器，事实上我这里还有一些好东西，但并未整理好，也受限于我的文字表达水平，迟迟难以下笔。这篇文章也并未完全传递出我想说的话。</p>

<p>大家可以说说阅后感，比如对 ME 2.0 由文章而生的印象，若有些行文建议最好不过，写作从来都只是我的一项业余爱好，但我越来越热爱写作，愈加想提高文章质量，如此写出的文字才不会太辜负一些好作品，和乐意阅读的朋友们！</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周分享第 2 期]]></title>
    <link href="https://blog.tangxiaozhu.com/15254917496629.html"/>
    <updated>2018-05-05T11:42:29+08:00</updated>
    <id>https://blog.tangxiaozhu.com/15254917496629.html</id>
    <content type="html"><![CDATA[
<ul>
<li>
<a href="#toc_0">编程</a>
<ul>
<li>
<a href="#toc_1">初学者可以考虑选择 Python</a>
</li>
</ul>
</li>
<li>
<a href="#toc_2">疑问</a>
<ul>
<li>
<a href="#toc_3">API 是什么？</a>
</li>
<li>
<a href="#toc_4">饭前刷牙还是饭后？</a>
</li>
</ul>
</li>
</ul>


<h2 id="toc_0">编程</h2>

<h3 id="toc_1">初学者可以考虑选择 Python</h3>

<p>我一直都想掌握一门编程语言，因为我感到如果未来不了解编程语言，会增加生存难度…… <a href="https://36kr.com/p/5084329.html">IEEE 发布 2017 年编程语言排行榜：Python 高居首位，PHP 第八</a> 也说明了 Python 的流行和重要性。<a href="https://www.techug.com/post/most-popular-programming-languages-best-for-developers.html">前 10 大编程语言你会几种</a> 也认为初学者使用 Python 是不错的选择。廖雪峰教程也大力夸赞 Python，所以如果没有特别目的，完全可以考虑学习 Python 这门语言，它功能强大，且相较之下易掌握。</p>

<span id="more"></span><!-- more -->

<h2 id="toc_2">疑问</h2>

<h3 id="toc_3">API 是什么？</h3>

<p>经常遇到各种缩写，虽然我们大致了解其含义，但并不精确。详细了解一些常用缩写，也有助于加深理解和记忆。</p>

<p><a href="https://zh.wikipedia.org/wiki/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%8E%A5%E5%8F%A3">API</a>（Application Programming Interface，应用程序接口），维基百科中阐述为软件系统不同组成部分衔接的约定。</p>

<p><a href="https://zh.wikipedia.org/wiki/%E9%97%9C%E9%8D%B5%E7%B8%BE%E6%95%88%E6%8C%87%E6%A8%99">KPI</a>（Key Performance Indicators，关键绩效指标），是指衡量一个管理工作成效最重要的指标，是一项数据化管理的工具，必须是客观、可衡量的绩效指标。</p>

<h3 id="toc_4">饭前刷牙还是饭后？</h3>

<p>果壳文章 <a href="https://www.guokr.com/article/220/">让刷牙不再纠结</a> 讲：通常时候，刷牙的主要目的是去除牙斑，牙斑是指粘附在牙齿表面或口腔其他软组织上的微生物群。人的口腔本来就是细菌滋生的温床，尤其是经过一整夜的酝酿，早起时嘴里的细菌数量达到最高峰。所以，早起刷牙其实和饭前饭后无关，最主要的目的是清理口腔中细菌。也即，最好在饭前刷牙，饭后漱口。</p>

<p>人民网 <a href="https://health.people.com.cn/n1/2016/0628/c21471-28503403.html">这篇文章</a> 中所谓北京营养师协会理事熊苗指出的内容，竟与果壳基本一致…… 营养师是怎样的存在？</p>

<p>但在知乎上，<a href="https://www.zhihu.com/question/25421536/answer/31981839">朱王勇</a> 表示：正确的习惯是起床后先进食再刷牙，只是我们多数人习惯了早起饭前刷牙。</p>

<p>在丁香医生上，<a href="https://dxy.com/column/2477">许桐楷</a> 认为刷牙的主要目的之一是清除食物残渣，但刷牙还有另一个更重要的功能，就是清除口腔内的细菌。刷牙，无所谓早饭前还是早饭后，只要刷就可以了。但保险起见，还是饭前刷牙或饭后半小时刷牙，如果是饭前刷牙，饭后认真漱口且能用漱口水的话就更好。</p>

<p>综上，我们最好饭前刷牙，饭后认真漱口…… 这是最便捷的选择。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自学 Python 第 1 期]]></title>
    <link href="https://blog.tangxiaozhu.com/15251484115051.html"/>
    <updated>2018-05-01T12:20:11+08:00</updated>
    <id>https://blog.tangxiaozhu.com/15251484115051.html</id>
    <content type="html"><![CDATA[
<p>为了掌握一门编程语言，我从 2014 年就开始考虑学习 Python，看过一些教程和书籍，但全部半途而废，准确地说是很快就放弃了。学习 Python 不仅是一件锻炼思维的事情，也可能关系我未来的职业发展。所以，我下定决心了，要坚持把 Python 慢慢消化透点，成为第一门我掌握的编程语言。</p>

<p>网络教程以廖雪峰的 Python 3 教程为主，但这份教程也有一些不足之处，我会结合自己的思考，加以完善，在记录自己学习过程的同时，也能给予你参考，我就比较满意了。自学系列基于 macOS，倘若使用 Windows，只需按照廖雪峰教程即可。</p>

<span id="more"></span><!-- more -->

<h2 id="toc_0">安装 Python</h2>

<p>macOS 终端中输入 <code>python -V</code> 显示当前版本，我的 macOS 10.13.4 其 Python 版本为 2.7.10，而目前 Python 版本众多（2.x、3.x），为了更好地管理 Python，可使用版本管理工具 pyenv，在此之前，请去了解 Homebrew 相关内容。</p>

<p>根据 <a href="https://github.com/pyenv/pyenv#homebrew-on-mac-os-x">官方安装教程</a> 安装 pyenv：</p>

<pre><code class="language-text">brew update
brew install pyenv
</code></pre>

<p>然后根据 <a href="https://github.com/pyenv/pyenv#basic-github-checkout">Basic GitHub Checkout</a> 步骤 3 进行激活：</p>

<pre><code class="language-text">$ echo -e &#39;if command -v pyenv 1&gt;/dev/null 2&gt;&amp;1; then\n  eval &quot;$(pyenv init -)&quot;\nfi&#39; &gt;&gt; ~/.bash_profile
</code></pre>

<p>最后重启终端，并输入 <code>exec &quot;$SHELL&quot;</code> 以使 Path 生效。至此，pyenv 就安装和配置完毕。</p>

<p><a href="https://github.com/pyenv/pyenv#how-it-works">点击这里了解 pyenv 工作原理 </a></p>

<p>不太理解为啥要先输入 <code>brew update</code> 更新 Homebrew，我观察到只在终端输入 <code>brew install pyenv</code> 也会自动更新。</p>

<p><strong>小插曲：</strong>在设置了终端代理的情况，输入 <code>brew update</code> 命令总报错，所以根据 <a href="https://docs.brew.sh/FAQ">官方文档</a> 卸载重新安装了 Homerew，报错原因应该是很久之前更换过国内镜像源……</p>

<pre><code class="language-text">ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall)&quot;
 
ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;
</code></pre>

<p>言归正传，pyenv 安装完毕后，则可查询可安装的 Python 版本：</p>

<pre><code class="language-text">pyenv install --list
</code></pre>

<p>廖雪峰的 Python 3 教程要求安装 3.6.x 版本，所以我安装了此时最新的稳定版本 3.6.5：</p>

<pre><code class="language-text">pyenv install 3.6.5
</code></pre>

<p>然后全局启用 Python 3.6.5:</p>

<pre><code class="language-text">pyenv global 3.6.5
</code></pre>

<p>然后就可以正常启用教程中的 Python 代码运行助手……</p>

<p>自学 Python 第 1 期到此结束。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于我 2018]]></title>
    <link href="https://blog.tangxiaozhu.com/15250509803819.html"/>
    <updated>2018-04-30T09:16:20+08:00</updated>
    <id>https://blog.tangxiaozhu.com/15250509803819.html</id>
    <content type="html"><![CDATA[
<p>2018 年对我来说是很重要的一年，年初于北京参加工作。空暇之余重新梳理了博客，我觉着自己是一个爱分享的人，但现在不太爱在现实中主动分享，因为遭遇了不少次好心分享却被认为是推销的情形，所以我更多地会在网上与诸位分享，有所需求的人找到这里，大概不会再认为我在推销，或利益导向。</p>

<p>我确定了两个昵称：一个是唐小筑，这是我最初随缘确定的笔名，在 2014 年刚用 Hexo 开设博客时还不是这个昵称，当时钟意的名字都没了，荒废后于 2016 年重开博客，虽然丢失了之前的文章，但是得了这个缘分笔名；另一个还未到公布时候，另一个名号主要分享我的思考，唐小筑偏于技术。因此，我弃用了之前以真实姓名为 ID 的账号，留给跟我同名的大量朋友使用…… </p>

<p>我一向反感占着资源却不使用，比如本科时期经常有占座的，如果所有人都不占座，那每个人到达自习室应该都会有座位可坐。总之，唐小筑也是借着不易的缘分所得，虽然有小姐姐告诉我比较女性化，虽然也真有人是这个名字，虽然唐小筑这个昵称在不少平台也有人使用了…… 英文昵称为 <code>TANG XIAOZHU</code>，实在是懒得再去琢磨英文名字，就按着一般的规则吧。</p>

<p>若要关注我的动态，建议关注 <a href="https://weibo.com/6502478659">微博</a> ，最好同时关注 <a href="https://twitter.com/heytxz">Twitter</a>，我的微博账号因为未知原因已被封禁，按照提示却无法解封，我也从未在微博或其他任何网站发布不当言论，总共微博数也不过数十条，却由于莫名原因导致账号无法使用，微博官方甚至没有告知原因。最后询问客服，被告知冻结原因是点赞太多骚扰了其他用户，已为我恢复账号。总共才赞了五条微博… </p>

<blockquote>
<p>您当前使用的账号存在异常，请完成以下操作解除异常状态。</p>
</blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周分享第 1 期]]></title>
    <link href="https://blog.tangxiaozhu.com/15246446693895.html"/>
    <updated>2018-04-25T16:24:29+08:00</updated>
    <id>https://blog.tangxiaozhu.com/15246446693895.html</id>
    <content type="html"><![CDATA[
<ul>
<li>
<a href="#toc_0">疑问</a>
<ul>
<li>
<a href="#toc_1">Markdown 为何两次回车才能换行？</a>
</li>
<li>
<a href="#toc_2">Bash 是什么？</a>
</li>
</ul>
</li>
<li>
<a href="#toc_3">工具</a>
<ul>
<li>
<a href="#toc_4">SourceTree：Git 和 Hg 客户端</a>
</li>
</ul>
</li>
<li>
<a href="#toc_5">好文</a>
<ul>
<li>
<a href="#toc_6">Git 深入浅出 Git 权限校验（最熟悉的陌生概念）</a>
</li>
<li>
<a href="#toc_7">搬进 GitHub</a>
</li>
</ul>
</li>
</ul>


<h2 id="toc_0">疑问</h2>

<h3 id="toc_1">Markdown 为何两次回车才能换行？</h3>

<ol>
<li>在写 MD 文件时通常首行不会空格，在切换下一个自然段时，如果仅仅一个回车就换行，即产生 <code>&lt;br&gt;</code> 标签，那么相邻自然段之间就没有足够的空白，会使文章难以阅读；</li>
<li>如果一个回车就换行，产生 <code>&lt;p&gt;</code> 标签，那么在列表换行和代码内部换行时，将会产生额外的空白，会使文章难以阅读；请注意，<code>&lt;br&gt;</code> 标签只是开始新的一行，浏览器解析时相邻自然段中行间距通常较小，而当浏览器遇到 <code>&lt;p&gt;</code> 标签时，通常会在相邻的段落之间插入一些垂直的间距；</li>
<li>如果确实需要 <code>&lt;br&gt;</code> 标签的话，在需要处键入两个以上的空格后回车。</li>
<li>⚠️ 如果是单回车产生 <code>&lt;br&gt;</code>，双回车产生 <code>&lt;p&gt;</code> 呢？这显然更加符合我的想法～ 但目前一些编辑器可以设置回车转换为 <code>&lt;br&gt;</code> 标签，也即单回车产生一个 <code>&lt;br&gt;</code>，双回车产生俩 <code>&lt;br&gt;</code> 标签，这对浏览器友好么？</li>
</ol>

<pre><code class="language-text">&lt;br&gt; 标签是空标签，意味着它没有结束标签，因此 &lt;br&gt;&lt;/br&gt; 的写法是错误的；
但在 XHTML 中，要求空标签也需结束标签，且把结束标签放在开始标签中，也就是 &lt;br /&gt;。
</code></pre>

<span id="more"></span><!-- more -->

<h3 id="toc_2">Bash 是什么？</h3>

<p>在 macOS 上打开终端，标题栏上总有 <code>bash</code> 字眼，那么这是啥？Bash，Unix shell 的一种，是一个命令处理器，通常运行于文本窗口中，并能执行用户直接输入的命令，在 1987 年由布莱恩·福克斯（Brian J. Fox）为了 GNU 计划而编写。</p>

<p>Unix shell 是啥？一种壳层与命令行界面，是 Unix 操作系统下传统的用户和计算机的交互界面，之所以被称作 shell 是因为它隐藏了操作系统低层的细节，Unix 操作系统下的 shell 既是用户交互的界面，也是控制系统的脚本语言。shell 是啥？壳层，指作业系统中，提供存取内核所提供之服务的程式，也泛指所有为用户提供操作界面的程序。通常将 shell 分为两类：命令列与图形界面。命令列壳层提供一个命令行界面（CLI），而图形壳层提供一个图形使用者界面（GUI）。与之相对的是程序内核（Kernel），内核不提供和用户的交互功能。</p>

<h2 id="toc_3">工具</h2>

<h3 id="toc_4">SourceTree：Git 和 Hg 客户端</h3>

<p>SourceTree 支持添加 GitHub 与 Bitbucket 多账号，支持 Mercurial 和 Git 两种分散式版本管理系统，由 Atlassian 公司开发。暂未深度使用，但初见观感甚好。</p>

<h2 id="toc_5">好文</h2>

<h3 id="toc_6"><a href="https://ruby-china.org/topics/30298">Git 深入浅出 Git 权限校验（最熟悉的陌生概念）</a></h3>

<p>讲清楚了 Git 权限问题，对于在一台电脑上设置多个 GitHub 账号大有裨益。</p>

<p>其在另篇文章 <a href="http://debugtalk.com/post/trap-in-GitHub-authority-verification/">GitHub 权限校验失败给我的启发</a> 中讲明了 macOS 上 Git 用户信息存储位置。</p>

<h3 id="toc_7"><a href="http://gitbeijing.com/">搬进 GitHub</a></h3>

<p>较为通俗的 GitHub 入门教程。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[输入法的选择]]></title>
    <link href="https://blog.tangxiaozhu.com/15250965271937.html"/>
    <updated>2018-04-30T21:55:27+08:00</updated>
    <id>https://blog.tangxiaozhu.com/15250965271937.html</id>
    <content type="html"><![CDATA[
<p>在 iOS &amp; macOS 上我只使用原声输入法。一是对三方输入法安全性自身的担忧，毕竟它是可以完全记录我们所有输入的信息；二是原生输入法也挺好用，我最常用文本替换和表情符号输入功能，在外观上我其简洁美也深得我心。</p>

<p><strong>输入模式：</strong></p>

<ul>
<li><p><a href="https://www.zhihu.com/question/40883993">音调输入</a>：Tab <br><br/>
<img src="media/15250965271937/15250965803715.gif" alt=""/></p></li>
<li><p>笔画模式：U</p></li>
<li><p>拆分输入<br/>
shift + 空格，比如你知道三个牛组成的字怎么打么？<code>niuniuniu</code> + <code>shift + 空格</code> 即可。 </p></li>
</ul>

<p><strong>快捷键</strong></p>

<ul>
<li>向后删除 <code>fn</code> + <code>del</code></li>
</ul>

<p>在安卓手机和 Windows 上我使用搜狗输入法，搜狗在各平台颜值和体验都还不错，而且说实话搜狗等国内输入法确实更懂中文输入习惯。纵然我仍担忧隐私安全性，但安卓和 Windows 也非主要设备，为了便捷性暂且这样，可持续关注其私隐策略。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SimpRead：简悦你的知识消化历程]]></title>
    <link href="https://blog.tangxiaozhu.com/15250972560875.html"/>
    <updated>2018-04-30T22:07:36+08:00</updated>
    <id>https://blog.tangxiaozhu.com/15250972560875.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>本文被少数派精选：<a href="https://sspai.com/post/43606">点此查看</a></p>
</blockquote>

<p>在互联网上如少数派这样排版良好的网站不少，但排版欠佳的也不少，类似 Safari 阅读模式的功能就比较重要了。而且无论排版好差，我们晚间也许更偏爱暗色背景。遇到好文，也许还想保存或备份到 Pocket、OneNote、印象笔记以温习或整理。</p>

<p>目前，在 Chrome Web Store 中可以检索到的阅读模式扩展程序仅有个位数，如 Just Read、Read Mode、阅读模式等，<a href="http://ksria.com/simpread/">SimpRead（简悦）</a>是其中集大成者，达成「简单阅读，愉悦心情」之目的。</p>

<span id="more"></span><!-- more -->

<h2 id="toc_0">源于 Safari 但更胜之的阅读模式</h2>

<p>相较于 Safari 只能调节字体大小、类型、背景颜色和自动进入阅读模式的功能，SimpRead 还可以调整版面布局、生成目录大纲、显示阅读进度，甚至可以 DIY 样式。除了阅读模式，SimpRead 还提供稍后读、聚焦模式，可谓将阅读网页这件事情做向了极致。</p>

<p><img src="media/15250972560875/15250972925636.png" alt="阅读模式"/></p>

<h2 id="toc_1">连接生产力工具</h2>

<p>万物互联会产生更大的生产力，SimpRead 可以连接 OneNote、印象笔记、Pocket、Google Drive、Dropbox、Kindle 等工具，你可以一键将任意文章保存至这些工具中，然后阅读、加工，乃至消化。除此之外，SimpRead 还可以将文章转为 MD、PDF、PNG、EPUB 格式文件，或分享至微博、Twitter、Telegram 等社交工具。 </p>

<p><img src="media/15250972560875/15250973208027.png" alt="各类服务"/></p>

<h2 id="toc_2">快捷键</h2>

<p>SimpRead 支持 <a href="https://github.com/Kenshin/simpread/wiki/%E5%BF%AB%E6%8D%B7%E9%94%AE">快捷键</a> 操作，按 <code>s</code> <code>r</code> 键开启或关闭快捷键模式，当此模式开启时，按 <code>,</code> 键可以一览所有快捷键，比如按 <code>o</code> <code>n</code> 键即保存到 OneNote，按 <code>g</code> <code>r</code> 键即保存到 Google Drive，按 <code>m</code> <code>d</code> 键即导出为 MD 文件。借助快捷键简化流程，可轻松愉悦地将文章保存至各种工具或转为各种格式等待消化。</p>

<p>⚠️ 只有在英文输入状态下，按 <code>,</code> 键才会显示所有快捷键，其他快捷键中英文输入状态皆可。</p>

<p><img src="media/15250972560875/15250973489919.png" alt=""/></p>

<h2 id="toc_3">更多功能等你发现</h2>

<p>SimpRead 不仅仅是提供类 Safari 阅读模式的工具，其诸多功能可以完成的事情众多。比如我还用来备份文章：五年前我搭了博客，但又遗弃了，本地备份也误删了，导致数十篇博客就此消失。重新开设博客并在少数派投稿时，我就在盘算怎么备份文章… 而 SimpRead 可将文章以 MD 文件形式保存在 Google Drive 等云盘，解决了我的需求。可在 <a href="https://github.com/Kenshin/simpread/wiki">官方维基</a> 详细查看各类功能。</p>

<p><img src="media/15250972560875/15250973751790.png" alt=""/></p>

<p>总而言之，SimpRead（简悦）青出于蓝而胜于蓝，既在阅读模式上做到了极致，又连接众多生产力工具提高了知识消化率，还可以完成更多的事情，却不显得臃肿。可以说，在这个小领域里，SimpRead 是无可挑剔的五星级工具。</p>
<br>
<blockquote>
<p>本文应用版本：<br/>
SimpRead 1.1.0 </p>
</blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apple Watch 堪为最佳的伴侣]]></title>
    <link href="https://blog.tangxiaozhu.com/15250970230512.html"/>
    <updated>2018-04-30T22:03:43+08:00</updated>
    <id>https://blog.tangxiaozhu.com/15250970230512.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>本文被少数派精选：<a href="https://sspai.com/post/41832">点此查看</a></p>
</blockquote>

<p>如果使用 Apple 设备，Apple Watch 堪为最佳伴侣，但也并非必需品，单身贵族一样可以过得好…… 但有个伴侣可能更好。</p>

<p>初入 Apple Watch 时，我以为它会成为我的效率工具，这也是劝服自己花钱的最主要理由。为此我特意下载了 OmniFocus 以示决心，不出两周我渐渐明白其实所谓效率工具的确只是我花钱的理由，而非内心对它真实的定位：一个好伙伴，可以帮我做一些事，让我能更懒。</p>

<p><img src="media/15250970230512/15250971106823.png" alt="OmniFocus" class="mw_img_center" style="width:650px;display: block; clear:both; margin: 0 auto;"/></p>

<span id="more"></span><!-- more -->

<p>运动，Apple Watch 主要宣传的功能之一，也的确予人欣悦。开通一号多端业务后，AW 3 就成了 iPhone 分身，无需再携带手机，只需手腕处的 AW 跑步、游泳就不会再漏掉电话，也能以更舒适的方式监测运动，搭配 AirPods 听着音乐也成了更赏心悦目的美事。单独的 Apple Watch 像是龙游浅水，接打电话、听音乐均外放的话，不仅太傻乎，也可能太耗电。对于 Apple 设备，AirPods 无愧于最具明天属性的无线蓝牙耳机，与 Apple Watch 搭配更是天作之合。  </p>

<p><img src="media/15250970230512/15250971322878.png" alt="Running" class="mw_img_center" style="width:650px;display: block; clear:both; margin: 0 auto;"/></p>

<p><img src="media/15250970230512/15250971479550.jpg" alt="Swimming" class="mw_img_center" style="width:650px;display: block; clear:both; margin: 0 auto;"/></p>

<p>运动是主要的生活方式，一般每天一次，但并不是我最频繁的行动：</p>

<p>① 在繁忙时候我常需要在特定时间起床，现在终于有了 Apple Watch 默默叫醒我，而不必影响到室友，还可以设定睡眠监测。设定闹钟提醒其他事项的体验也怡人；</p>

<p>② 之前借助 iPhone 三方应用解锁 Mac 的体验并不好，而 AW 可以无缝实现；</p>

<p>③ 番茄工作法可以随时进行、打断或停止，远比手机、电脑来得方便；</p>

<p>④ 听音乐、聊微信、打电话等，连接着 AirPods 体验更美好。</p>

<p>简而言之，简单的任务 Apple Watch 都可以完成，体验比手机更美好，频繁看手机的习惯也变成了看手表。然而，它并非不可或缺的伴侣，钱花在不可或缺的事物上会更好，但在可或缺的事物中，Apple Watch 可能最不可或缺。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[设备与系统的选择]]></title>
    <link href="https://blog.tangxiaozhu.com/15250963823631.html"/>
    <updated>2018-04-30T21:53:02+08:00</updated>
    <id>https://blog.tangxiaozhu.com/15250963823631.html</id>
    <content type="html"><![CDATA[
<p>理性的发展使越来越多的人也不再争论 Windows PC &amp; MacBook、iPhone &amp; Android 或 Windows &amp; macOS &amp; Linux、iOS &amp; Android 之间的优劣，实际上双方各有优势，一些人也就使用两种或以上的系统或设备。</p>

<p>关于电脑，目前我认为最好的选择是 MacBook &amp; Surface，虽然新 MacBook Pro 键盘两边的密集孔有些眨扎眼，Surface Pro 在颜值细节上还有许多提升。关于手机，iPhone &amp; 坚果 Pro 在颜值上我最满意。</p>

<p>我有安卓手机，但为什么不作为主要使用设备？因为安卓的安全性太差，几乎任何应用都可以安装，即使是商店的应用也没有极其专业的团队进行检查。使用安卓的过程中，我曾禁止微博访问通讯录，但发现它还能访问，百思不解，也就不敢再同步通讯录。iOS 可以在最大程度上保证应用权限被限定在允许范围内，隐私也可以得到更高的保护。</p>

]]></content>
  </entry>
  
</feed>
